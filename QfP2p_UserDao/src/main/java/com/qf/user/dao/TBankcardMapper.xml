<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.user.dao.TBankcardMapper">
  <resultMap id="BaseResultMap" type="com.qf.user.po.TBankcard">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="aid" jdbcType="INTEGER" property="aid" />
    <result column="openname" jdbcType="VARCHAR" property="openname" />
    <result column="cardno" jdbcType="VARCHAR" property="cardno" />
    <result column="bankname" jdbcType="VARCHAR" property="bankname" />
    <result column="bankaddress" jdbcType="VARCHAR" property="bankaddress" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, aid, openname, cardno, bankname, bankaddress, flag
  </sql>
  <select id="selectByExample" parameterType="com.qf.user.po.TBankcardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bankcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_bankcard
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_bankcard
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.user.po.TBankcardExample">
    delete from t_bankcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.user.po.TBankcard">
    insert into t_bankcard (id, aid, openname, 
      cardno, bankname, bankaddress, 
      flag)
    values (#{id,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{openname,jdbcType=VARCHAR}, 
      #{cardno,jdbcType=VARCHAR}, #{bankname,jdbcType=VARCHAR}, #{bankaddress,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.user.po.TBankcard">
    insert into t_bankcard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="aid != null">
        aid,
      </if>
      <if test="openname != null">
        openname,
      </if>
      <if test="cardno != null">
        cardno,
      </if>
      <if test="bankname != null">
        bankname,
      </if>
      <if test="bankaddress != null">
        bankaddress,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="openname != null">
        #{openname,jdbcType=VARCHAR},
      </if>
      <if test="cardno != null">
        #{cardno,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null">
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankaddress != null">
        #{bankaddress,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.user.po.TBankcardExample" resultType="java.lang.Long">
    select count(*) from t_bankcard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_bankcard
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.openname != null">
        openname = #{record.openname,jdbcType=VARCHAR},
      </if>
      <if test="record.cardno != null">
        cardno = #{record.cardno,jdbcType=VARCHAR},
      </if>
      <if test="record.bankname != null">
        bankname = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.bankaddress != null">
        bankaddress = #{record.bankaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_bankcard
    set id = #{record.id,jdbcType=INTEGER},
      aid = #{record.aid,jdbcType=INTEGER},
      openname = #{record.openname,jdbcType=VARCHAR},
      cardno = #{record.cardno,jdbcType=VARCHAR},
      bankname = #{record.bankname,jdbcType=VARCHAR},
      bankaddress = #{record.bankaddress,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.user.po.TBankcard">
    update t_bankcard
    <set>
      <if test="aid != null">
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="openname != null">
        openname = #{openname,jdbcType=VARCHAR},
      </if>
      <if test="cardno != null">
        cardno = #{cardno,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null">
        bankname = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankaddress != null">
        bankaddress = #{bankaddress,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.user.po.TBankcard">
    update t_bankcard
    set aid = #{aid,jdbcType=INTEGER},
      openname = #{openname,jdbcType=VARCHAR},
      cardno = #{cardno,jdbcType=VARCHAR},
      bankname = #{bankname,jdbcType=VARCHAR},
      bankaddress = #{bankaddress,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>