<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.dao.user.TAccountMapper">
  <resultMap id="BaseResultMap" type="com.qf.user.po.user.TAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="paypass" jdbcType="VARCHAR" property="paypass" />
    <result column="usebalance" jdbcType="DECIMAL" property="usebalance" />
    <result column="frostbalance" jdbcType="DECIMAL" property="frostbalance" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="credits" jdbcType="INTEGER" property="credits" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, paypass, usebalance, frostbalance, uid, credits, flag
  </sql>
  <select id="selectByExample" parameterType="com.qf.user.po.user.TAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.user.po.user.TAccountExample">
    delete from t_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.user.po.user.TAccount">
    insert into t_account (id, paypass, usebalance, 
      frostbalance, uid, credits, 
      flag)
    values (#{id,jdbcType=INTEGER}, #{paypass,jdbcType=VARCHAR}, #{usebalance,jdbcType=DECIMAL}, 
      #{frostbalance,jdbcType=DECIMAL}, #{uid,jdbcType=INTEGER}, #{credits,jdbcType=INTEGER}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.user.po.user.TAccount">
    insert into t_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paypass != null">
        paypass,
      </if>
      <if test="usebalance != null">
        usebalance,
      </if>
      <if test="frostbalance != null">
        frostbalance,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="credits != null">
        credits,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paypass != null">
        #{paypass,jdbcType=VARCHAR},
      </if>
      <if test="usebalance != null">
        #{usebalance,jdbcType=DECIMAL},
      </if>
      <if test="frostbalance != null">
        #{frostbalance,jdbcType=DECIMAL},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="credits != null">
        #{credits,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.user.po.user.TAccountExample" resultType="java.lang.Long">
    select count(*) from t_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.paypass != null">
        paypass = #{record.paypass,jdbcType=VARCHAR},
      </if>
      <if test="record.usebalance != null">
        usebalance = #{record.usebalance,jdbcType=DECIMAL},
      </if>
      <if test="record.frostbalance != null">
        frostbalance = #{record.frostbalance,jdbcType=DECIMAL},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.credits != null">
        credits = #{record.credits,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_account
    set id = #{record.id,jdbcType=INTEGER},
      paypass = #{record.paypass,jdbcType=VARCHAR},
      usebalance = #{record.usebalance,jdbcType=DECIMAL},
      frostbalance = #{record.frostbalance,jdbcType=DECIMAL},
      uid = #{record.uid,jdbcType=INTEGER},
      credits = #{record.credits,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.user.po.user.TAccount">
    update t_account
    <set>
      <if test="paypass != null">
        paypass = #{paypass,jdbcType=VARCHAR},
      </if>
      <if test="usebalance != null">
        usebalance = #{usebalance,jdbcType=DECIMAL},
      </if>
      <if test="frostbalance != null">
        frostbalance = #{frostbalance,jdbcType=DECIMAL},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="credits != null">
        credits = #{credits,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.user.po.user.TAccount">
    update t_account
    set paypass = #{paypass,jdbcType=VARCHAR},
      usebalance = #{usebalance,jdbcType=DECIMAL},
      frostbalance = #{frostbalance,jdbcType=DECIMAL},
      uid = #{uid,jdbcType=INTEGER},
      credits = #{credits,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>